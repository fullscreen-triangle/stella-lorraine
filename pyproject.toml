[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "masunda-temporal-navigator-tools"
version = "0.1.0"
description = "Python tools and scripts for the Masunda Temporal Coordinate Navigator"
authors = [
    {name = "Kundai Sachikonye", email = "kundai@masunda.org"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["temporal", "precision", "tools", "masunda", "memorial"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: System :: Hardware :: Symmetric Multi-processing",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    "jupyter>=1.0.0",
    "plotly>=5.0.0",
    "seaborn>=0.11.0",
    "requests>=2.25.0",
    "click>=8.0.0",
    "tqdm>=4.60.0",
    "pyyaml>=6.0",
    "toml>=0.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
analysis = [
    "scikit-learn>=1.1.0",
    "sympy>=1.9.0",
    "numba>=0.56.0",
    "networkx>=2.8.0",
]
visualization = [
    "dash>=2.0.0",
    "bokeh>=2.4.0",
    "altair>=4.2.0",
]

[project.urls]
Homepage = "https://github.com/kundai/masunda-temporal-coordinate-navigator"
Repository = "https://github.com/kundai/masunda-temporal-coordinate-navigator.git"
Documentation = "https://masunda-navigator.readthedocs.io"
"Bug Tracker" = "https://github.com/kundai/masunda-temporal-coordinate-navigator/issues"

[project.scripts]
masunda-analyze = "tools.analysis:main"
masunda-visualize = "tools.visualization:main"
masunda-validate = "tools.validation:main"
masunda-memorial = "tools.memorial:display_message"

[tool.setuptools.packages.find]
where = ["tools"]

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "tools/tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "precision: marks tests that require high precision",
    "memorial: marks tests related to memorial framework",
    "integration: marks tests that require external systems",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 